<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

using System;
using System.Collections.Generic;
using System.Text;

using System.Runtime.InteropServices;

namespace System
{
    public class Klava
    {
        [DllImport("user32.dll")]
        private static extern short GetAsyncKeyState(int vKey);
        [DllImport("user32.dll")]
        private static extern short GetKeyState(int nVirtKey);
        [DllImport("user32.dll")]
        private static extern void keybd_event(byte bVk, byte bScan, int dwFlags, int dwExtraInfo);
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////////////////////////////////////////////////
        public Klava Sleep(int _Sleep=50) { System.Threading.Thread.Sleep(_Sleep);return this; }

        public Klava Down(byte nVirtKey) { keybd_event(nVirtKey, 0, 0, 0); return this; }
        public Klava Up(byte nVirtKey) { keybd_event(nVirtKey, 0, 2, 0); return this; }
        public System.Boolean Is(int nVirtKey) { switch (GetKeyState(nVirtKey)) { case -127: return true; break; case -128: return true; break; default: return false; break; } return false; }

        
<#
Get
("A",65)
("B",66)
("C",67)
("D",68)
("E",69)
("F",70)
("G",71)
("H",72)
("I",73)
("J",74)
("K",75)
("L",76)
("M",77)
("N",78)
("O",79)
("P",80)
("Q",81)
("R",82)
("S",83)
("T",84)
("U",85)
("V",86)
("W",87)
("X",88)
("Y",89)
("Z",90)
;
#>

        public short VK_Q_Is_() => GetKeyState(81);
        ///////////////////////////////////////////////////////////////////////////////////////////////////////
    }
}

<#+
public delegate MyDel MyDel(string str,int code);
public MyDel Get(string str,int code)
{
    #>
#region <#=code#> <#=str#>
    ///////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary><#=str#>_Down</summary><returns></returns>
    public Klava VK_<#=str#>_Down() { keybd_event(<#=code#>, 0, 0, 0); return this; }
    /// <summary><#=str#>_Up</summary><returns></returns>
    public Klava VK_<#=str#>_Up() { keybd_event(<#=code#>, 0, 2, 0); return this; }
    /// <summary>_Is_<#=str#>_Down</summary><returns></returns>
    public System.Boolean VK_<#=str#>_Is(){return this.Is(<#=code#>);}
    /// <summary>if(<#=str#>_Is ){_f1();}else{_f0);}</summary><returns></returns>
    public Klava VK_<#=str#>_Is(System.Action<Klava> _f1=null, System.Action<Klava> _f0 = null) 
    {
        System.Boolean _flag = this.VK_<#=str#>_Is();
        if (_flag) { if (_f1 != null) _f1(this); } else { if (_f0 != null) _f0(this); }
        return this; 
    }
    ///////////////////////////////////////////////////////////////////////////////////////////////////////
#endregion
    <#+
    return Get;
}
#>